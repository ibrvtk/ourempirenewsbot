from config import bot, logErrors, ID_OERCHAT_ADMIN
import oerChat.app.keyboards as kb

# from oerChat.databases.appeals import updateUser

from dataclasses import dataclass

from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext


adminside = Router()

conversationData = {}
activeAppeals = {}



# /unban
@dataclass
class fsmUnbanSendAppeal(StatesGroup):
    text = State() # –ò—Å—Ç–æ—Ä–∏–∏ –ø–µ—Ä–µ–ø–∏—Å–∫–∏. –ó–Ω–∞—á–µ–Ω–∏–µ —Å–ª–∏–≤–∞–µ—Ç—Å—è –≤ conversationData[*][f'msg{msgCount}'], –∞ –ø–æ—Å–ª–µ –æ–±–Ω—É–ª—è–µ—Ç—Å—è.

@adminside.message(F.chat.type == "private", Command("unban"))
async def cmdUnban(message: Message, state: FSMContext):
    appellant_id = message.from_user.id
    appelant_user = f"@{message.from_user.username}" if message.from_user.username else f"{message.from_user.first_name} (<code>{message.from_user.id}</code>)"

    conversationData[appellant_id] = { # –ò—Å—Ç–æ—Ä–∏—è –ø–µ—Ä–µ–ø–∏—Å–∫–∏. msg1 - –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
        'appellant_id': appellant_id,
        'appellant_user': appelant_user,
        'admin_id': None,
        'msg1': None
    }

    await state.update_data(msgCount=0)
    await state.set_state(fsmUnbanSendAppeal.text)

    await message.answer(f"üÜò <b>–ê–ø–µ–ª–ª—è—Ü–∏—è –Ω–∞ —Ä–∞–∑–±–∞–Ω</b> ‚Äî {appelant_user}\n"
                         "–í–∞—à–µ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ —á–∞—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏, –æ—Ç–∫—É–¥–∞ —Å –í–∞–º–∏ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è –æ–±—â–µ–Ω–∏–µ.\n"
                         "–û–ø–∏—à–∏—Ç–µ –∑–∞ —á—Ç–æ –í–∞—Å –∑–∞–±–∞–Ω–∏–ª–∏ <i>(–µ—Å–ª–∏ –∑–Ω–∞–µ—Ç–µ –∏–ª–∏ –ø–æ–º–Ω–∏—Ç–µ)</i> –∏ –ø–æ—á–µ–º—É –í—ã –Ω–∞—Ä—É—à–∞–ª–∏.\n\n"
                         "<i>–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –±–æ—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤.\n–î–ª—è –æ—Ç–º–µ–Ω—ã –ø—Ä–æ–ø–∏—à–∏—Ç–µ /cancel.</i>")
    
@adminside.message(fsmUnbanSendAppeal.text)
async def fsmUnbanSendAppealText(message: Message, state: FSMContext):
    appellant_id = message.from_user.id
    appellant_user = f"@{message.from_user.username}" if message.from_user.username else f"{message.from_user.first_name} (<code>{appellant_id}</code>)"

    data = await state.get_data()
    msgCount = data['msgCount'] + 1
    await state.update_data(msgCount=msgCount)
    await state.update_data(text=message.text)

    global conversationData
    conversationData[appellant_id]['msg1'] = message.text

    if message.text:
        await message.reply("‚úÖ <b>–ê–ø–µ–ª–ª—è—Ü–∏—è –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.</b> –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏.")

        await bot.send_message(
            chat_id=ID_OERCHAT_ADMIN,
            text=f"üÜò <b>–ù–æ–≤–∞—è –∞–ø–µ–ª–ª—è—Ü–∏—è</b> ‚Äî {appellant_user}\n"
            f"<blockquote>{conversationData[appellant_id]['msg1']}</blockquote>",
            reply_markup=kb.unbanKeyboard_(appellant_id)
        )


@adminside.callback_query(F.data.startswith("unbanAppealDecline_"))
async def cbUnbanAppealAccept(callback: CallbackQuery, state: FSMContext):
    appellant_id = int(callback.data.split("_")[-1])
    admin_user = f"@{callback.from_user.username}" if callback.from_user.username else f"{callback.from_user.first_name} (<code>{callback.from_user.id}</code>)"

    global conversationData, activeAppeals
    del conversationData[appellant_id]



@adminside.callback_query(F.data.startswith("unbanAppealAccept_"))
async def cbUnbanAppealAccept(callback: CallbackQuery, state: FSMContext):
    appellant_id = int(callback.data.split("_")[-1])
    admin_user = f"@{callback.from_user.username}" if callback.from_user.username else f"{callback.from_user.first_name} (<code>{callback.from_user.id}</code>)"

    global conversationData, activeAppeals

    activeAppeals[appellant_id] = {
        'admin_id': callback.from_user.id,
        'appellant_id': appellant_id,
    }
    
    if appellant_id not in conversationData:
        await callback.answer("‚ùå –ê–ø–ø–µ–ª—è—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", show_alert=True)
        return

    await bot.send_message(
        chat_id=appellant_id,
        text="‚úÖ <b>–ê–ø–µ–ª–ª—è—Ü–∏—è –±—ã–ª–∞ –ø—Ä–∏–Ω—è—Ç–∞!</b> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–∞—á–∞–ª —Å –í–∞–º–∏ –¥–∏–∞–ª–æ–≥."
    )

    await callback.message.edit_text(f"üÜò <b>–ê–ø–µ–ª–ª—è—Ü–∏—è</b> ‚Äî {conversationData[appellant_id]['appellant_user']}\n"
                                     f"<blockquote>{conversationData[appellant_id]['msg1']}</blockquote>\n\n"
                                     f"<i>–ü—Ä–∏–Ω—è–ª {admin_user}</i>",
                                     reply_markup=kb.unbanKeyboardAcceptedActions_(appellant_id))