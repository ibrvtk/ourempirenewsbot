from config import bot, ID_CRM_OE_ADMIN, loggingErrors
from CRM_OE.database.scheme import updateUser

import CRM_OE.app.keyboards as kb

from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext


adminside = Router()
NONOFFTOPTOPICS = (43950, 43927, 44448) # –ó–∞—è–≤–ª–µ–Ω–∏—è, –∞–ª—å—è–Ω—Å—ã, –º–µ–º—ã
fsmPlaceholderTextRetry = "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (/cancel)."



@adminside.message(F.chat.id == ID_CRM_OE_ADMIN, Command("adminpanel"))
async def cmdAdminpanel(message: Message):
    await message.reply("üìù <b>–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∞</b> ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ <i>(—Å–¥–µ–ª–∞—Ç—å –∏–≥—Ä–æ–∫–æ–º, –∞–¥–º–∏–Ω–æ–º –∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä)</i>.\n\n"
                        "üìú <b>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤</b> ‚Äî —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ª—é–¥–µ–π –≤ –ë–î –¶–†–ú.",
                        reply_markup=kb.adminpanelKeyboard)

class fsmAdminpanelEditRights(StatesGroup):
    text = State()

@adminside.callback_query(F.data == "adminpanelEditRights")
async def cbAdminpanelEditRights(callback: CallbackQuery, state: FSMContext):
    await state.set_state(fsmAdminpanelEditRights.text)
    await callback.message.edit_text("<b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:</b> user_id, –ø–æ–ª–µ=–∑–Ω–∞—á–µ–Ω–∏–µ, –ø–æ–ª–µ2=–∑–Ω–∞—á–µ–Ω–∏–µ2 –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.")

@adminside.message(fsmAdminpanelEditRights.text)
async def fsmAdminpanelEditRightsText(message: Message, state: FSMContext):
    await state.clear()
    text = message.text

    try:
        parts = [part.strip() for part in text.split(',')]
        user_id = int(parts[0])
        
        updates = {}
        for part in parts[1:]:
            if '=' in part:
                key, value = part.split('=', 1)
                updates[key.strip()] = value.strip()
        
        await updateUser(user_id, **updates)

        user = await bot.get_chat(user_id)
        userMention = f"@{user.username}" if user.username else f"{user.id} {user.first_name}"
        await message.reply(f"–ß–µ–ª–æ–≤–µ–∫—É <b>{userMention}</b> –∏–∑–º–µ–Ω–µ–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã <i>(<code>{text}</code>)</i>.")
    
    except (ValueError, IndexError) as e:
        await message.reply(f"‚ùå <b>–û—à–∏–±–∫–∞!</b> –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: user_id, –ø–æ–ª–µ=–∑–Ω–∞—á–µ–Ω–∏–µ, –ø–æ–ª–µ2=–∑–Ω–∞—á–µ–Ω–∏–µ2 –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.\n{fsmPlaceholderTextRetry}")
        print(f"(X) CRM_OE/app/adminside.py: fsmAdminpanelEditRightsText(): {e}.") if loggingErrors else None